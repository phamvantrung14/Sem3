//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsumerAs2.BlogServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Blog", Namespace="http://schemas.datacontract.org/2004/07/WebServiceAssigment2.Models.DataModels")]
    [System.SerializableAttribute()]
    public partial class Blog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeBlogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int viewsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentShort {
            get {
                return this.ContentShortField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentShortField, value) != true)) {
                    this.ContentShortField = value;
                    this.RaisePropertyChanged("ContentShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeBlogID {
            get {
                return this.TypeBlogIDField;
            }
            set {
                if ((this.TypeBlogIDField.Equals(value) != true)) {
                    this.TypeBlogIDField = value;
                    this.RaisePropertyChanged("TypeBlogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int views {
            get {
                return this.viewsField;
            }
            set {
                if ((this.viewsField.Equals(value) != true)) {
                    this.viewsField = value;
                    this.RaisePropertyChanged("views");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlogServiceReference.IBlogService")]
    public interface IBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogList", ReplyAction="http://tempuri.org/IBlogService/GetBlogListResponse")]
        TestConsumerAs2.BlogServiceReference.Blog[] GetBlogList(string email, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogList", ReplyAction="http://tempuri.org/IBlogService/GetBlogListResponse")]
        System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog[]> GetBlogListAsync(string email, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/AddBlog", ReplyAction="http://tempuri.org/IBlogService/AddBlogResponse")]
        void AddBlog(TestConsumerAs2.BlogServiceReference.Blog b, string email, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/AddBlog", ReplyAction="http://tempuri.org/IBlogService/AddBlogResponse")]
        System.Threading.Tasks.Task AddBlogAsync(TestConsumerAs2.BlogServiceReference.Blog b, string email, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogById", ReplyAction="http://tempuri.org/IBlogService/GetBlogByIdResponse")]
        TestConsumerAs2.BlogServiceReference.Blog GetBlogById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogById", ReplyAction="http://tempuri.org/IBlogService/GetBlogByIdResponse")]
        System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog> GetBlogByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlog", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogResponse")]
        void UpdateBlog(TestConsumerAs2.BlogServiceReference.Blog b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlog", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogResponse")]
        System.Threading.Tasks.Task UpdateBlogAsync(TestConsumerAs2.BlogServiceReference.Blog b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DeleteBlog", ReplyAction="http://tempuri.org/IBlogService/DeleteBlogResponse")]
        void DeleteBlog(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DeleteBlog", ReplyAction="http://tempuri.org/IBlogService/DeleteBlogResponse")]
        System.Threading.Tasks.Task DeleteBlogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogByTypeId", ReplyAction="http://tempuri.org/IBlogService/GetBlogByTypeIdResponse")]
        TestConsumerAs2.BlogServiceReference.Blog[] GetBlogByTypeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogByTypeId", ReplyAction="http://tempuri.org/IBlogService/GetBlogByTypeIdResponse")]
        System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog[]> GetBlogByTypeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogListConsumer", ReplyAction="http://tempuri.org/IBlogService/GetBlogListConsumerResponse")]
        TestConsumerAs2.BlogServiceReference.Blog[] GetBlogListConsumer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogListConsumer", ReplyAction="http://tempuri.org/IBlogService/GetBlogListConsumerResponse")]
        System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog[]> GetBlogListConsumerAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogServiceChannel : TestConsumerAs2.BlogServiceReference.IBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<TestConsumerAs2.BlogServiceReference.IBlogService>, TestConsumerAs2.BlogServiceReference.IBlogService {
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestConsumerAs2.BlogServiceReference.Blog[] GetBlogList(string email, string pwd) {
            return base.Channel.GetBlogList(email, pwd);
        }
        
        public System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog[]> GetBlogListAsync(string email, string pwd) {
            return base.Channel.GetBlogListAsync(email, pwd);
        }
        
        public void AddBlog(TestConsumerAs2.BlogServiceReference.Blog b, string email, string pwd) {
            base.Channel.AddBlog(b, email, pwd);
        }
        
        public System.Threading.Tasks.Task AddBlogAsync(TestConsumerAs2.BlogServiceReference.Blog b, string email, string pwd) {
            return base.Channel.AddBlogAsync(b, email, pwd);
        }
        
        public TestConsumerAs2.BlogServiceReference.Blog GetBlogById(int id) {
            return base.Channel.GetBlogById(id);
        }
        
        public System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog> GetBlogByIdAsync(int id) {
            return base.Channel.GetBlogByIdAsync(id);
        }
        
        public void UpdateBlog(TestConsumerAs2.BlogServiceReference.Blog b) {
            base.Channel.UpdateBlog(b);
        }
        
        public System.Threading.Tasks.Task UpdateBlogAsync(TestConsumerAs2.BlogServiceReference.Blog b) {
            return base.Channel.UpdateBlogAsync(b);
        }
        
        public void DeleteBlog(int id) {
            base.Channel.DeleteBlog(id);
        }
        
        public System.Threading.Tasks.Task DeleteBlogAsync(int id) {
            return base.Channel.DeleteBlogAsync(id);
        }
        
        public TestConsumerAs2.BlogServiceReference.Blog[] GetBlogByTypeId(int id) {
            return base.Channel.GetBlogByTypeId(id);
        }
        
        public System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog[]> GetBlogByTypeIdAsync(int id) {
            return base.Channel.GetBlogByTypeIdAsync(id);
        }
        
        public TestConsumerAs2.BlogServiceReference.Blog[] GetBlogListConsumer() {
            return base.Channel.GetBlogListConsumer();
        }
        
        public System.Threading.Tasks.Task<TestConsumerAs2.BlogServiceReference.Blog[]> GetBlogListConsumerAsync() {
            return base.Channel.GetBlogListConsumerAsync();
        }
    }
}
