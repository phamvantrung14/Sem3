//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsumerAs2.CommentsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comments", Namespace="http://schemas.datacontract.org/2004/07/WebServiceAssigment2.Models.DataModels")]
    [System.SerializableAttribute()]
    public partial class Comments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlogID {
            get {
                return this.BlogIDField;
            }
            set {
                if ((this.BlogIDField.Equals(value) != true)) {
                    this.BlogIDField = value;
                    this.RaisePropertyChanged("BlogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommentsServiceReference.ICommentService")]
    public interface ICommentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/GetCommentByBlogList", ReplyAction="http://tempuri.org/ICommentService/GetCommentByBlogListResponse")]
        TestConsumerAs2.CommentsServiceReference.Comments[] GetCommentByBlogList(int blogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/GetCommentByBlogList", ReplyAction="http://tempuri.org/ICommentService/GetCommentByBlogListResponse")]
        System.Threading.Tasks.Task<TestConsumerAs2.CommentsServiceReference.Comments[]> GetCommentByBlogListAsync(int blogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/GetCommentParentByBlogList", ReplyAction="http://tempuri.org/ICommentService/GetCommentParentByBlogListResponse")]
        TestConsumerAs2.CommentsServiceReference.Comments[] GetCommentParentByBlogList(int blogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/GetCommentParentByBlogList", ReplyAction="http://tempuri.org/ICommentService/GetCommentParentByBlogListResponse")]
        System.Threading.Tasks.Task<TestConsumerAs2.CommentsServiceReference.Comments[]> GetCommentParentByBlogListAsync(int blogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/AddCommentByBlogList", ReplyAction="http://tempuri.org/ICommentService/AddCommentByBlogListResponse")]
        void AddCommentByBlogList(TestConsumerAs2.CommentsServiceReference.Comments cm, string email, string pwd, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/AddCommentByBlogList", ReplyAction="http://tempuri.org/ICommentService/AddCommentByBlogListResponse")]
        System.Threading.Tasks.Task AddCommentByBlogListAsync(TestConsumerAs2.CommentsServiceReference.Comments cm, string email, string pwd, int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommentServiceChannel : TestConsumerAs2.CommentsServiceReference.ICommentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommentServiceClient : System.ServiceModel.ClientBase<TestConsumerAs2.CommentsServiceReference.ICommentService>, TestConsumerAs2.CommentsServiceReference.ICommentService {
        
        public CommentServiceClient() {
        }
        
        public CommentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestConsumerAs2.CommentsServiceReference.Comments[] GetCommentByBlogList(int blogId) {
            return base.Channel.GetCommentByBlogList(blogId);
        }
        
        public System.Threading.Tasks.Task<TestConsumerAs2.CommentsServiceReference.Comments[]> GetCommentByBlogListAsync(int blogId) {
            return base.Channel.GetCommentByBlogListAsync(blogId);
        }
        
        public TestConsumerAs2.CommentsServiceReference.Comments[] GetCommentParentByBlogList(int blogId) {
            return base.Channel.GetCommentParentByBlogList(blogId);
        }
        
        public System.Threading.Tasks.Task<TestConsumerAs2.CommentsServiceReference.Comments[]> GetCommentParentByBlogListAsync(int blogId) {
            return base.Channel.GetCommentParentByBlogListAsync(blogId);
        }
        
        public void AddCommentByBlogList(TestConsumerAs2.CommentsServiceReference.Comments cm, string email, string pwd, int id) {
            base.Channel.AddCommentByBlogList(cm, email, pwd, id);
        }
        
        public System.Threading.Tasks.Task AddCommentByBlogListAsync(TestConsumerAs2.CommentsServiceReference.Comments cm, string email, string pwd, int id) {
            return base.Channel.AddCommentByBlogListAsync(cm, email, pwd, id);
        }
    }
}
